{"version":3,"file":"static/js/850.63e991a1.chunk.js","mappings":"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","sources":["AuthService.tsx","models/ForgotPasswordModel.tsx","components/ForgotPassword/ForgotPassword.tsx","components/common/Fields/TextField.tsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport async function Signup(data: any) {\n  try {\n    const res = await axios.post<any>(API_URL + \"signup\", data);\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n\nexport async function Login(data: any) {\n  try {\n    const res = await axios.post<any>(API_URL + \"login\", data);\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n\nexport async function ForgotPassword(data: any) {\n  try {\n    const res = await axios.post<any>(API_URL + \"forgotpassword\", data);\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n\nexport async function CheckForResetPassword(data: any) {\n  try {\n    const res = await axios.post<any>(API_URL + \"checkfortoken\", data);\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n\nexport async function ResetPassword(data: any) {\n  try {\n    const res = await axios.post<any>(API_URL + \"resetpassword\", data);\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n\nexport async function VerifyAccount(token: any) {\n  try {\n    const res = await axios.get<any>(API_URL + \"verify\", {\n      headers: {\n        authorization: token,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n\nexport async function ActivateAccount(token: any) {\n  try {\n    const res = await axios.put<any>(API_URL + \"active\", { token: token });\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n\nexport async function RegenerateLink(data: any) {\n  try {\n    const res = await axios.put<any>(API_URL + \"regeneratetoken\", data);\n    return res.data;\n  } catch (error: any) {\n    return error.response.data;\n  }\n}\n","import * as Yup from \"yup\";\n\nconst ForgotPasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .email()\n    .required(\"email is  required\")\n    .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"email is not valid\"),\n});\nexport { ForgotPasswordSchema };\n","import { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport TextField from \"../common/Fields/TextField\";\nimport { ForgotPassword as ForgotPasswordService } from \"../../AuthService\";\nimport { ForgotPasswordSchema } from \"../../models/ForgotPasswordModel\";\n\nimport { AiOutlineWarning } from \"react-icons/ai\";\nimport { HiOutlineArrowNarrowLeft } from \"react-icons/hi\";\nimport forgotpassword from \"../../Images/forgotpassword.jpg\";\n\nexport default function ForgotPassword() {\n  const [APIerror, setAPIerror] = useState(\"\");\n  const [APIsuccess, setAPIsuccess] = useState(\"\");\n\n  const methods = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(ForgotPasswordSchema),\n  });\n\n  const onSubmit = async (data: any) => {\n    const res = await ForgotPasswordService(data);\n    if (res.success === 0) {\n      setAPIerror(res.message);\n      setAPIsuccess(\"\");\n    } else {\n      setAPIerror(\"\");\n      setAPIsuccess(res.message);\n    }\n  };\n  return (\n    <>\n      <div className=\"bg-light2 text-primary  xl:min-h-[600px] flex items-centrer justify-center\">\n        <div className=\"container flex flex-col lg:flex-row-reverse justify-between\">\n          <div className=\"basis-1/2   flex items-center \">\n            <img\n              src={forgotpassword}\n              alt=\"\"\n              className=\"h-48 w-48 md:h-96 md:w-96  mx-auto \"\n            />\n          </div>\n          {/* success msg  */}\n          {APIsuccess.length > 0 && (\n            <div className=\"basis-1/2 flex justify-center  items-center  \">\n              <div className=\"my-3 h-fit rounded bg-success px-2 py-1\">\n                {APIsuccess}\n              </div>\n            </div>\n          )}\n          {APIsuccess.length === 0 && (\n            <FormProvider {...methods}>\n              <form\n                onSubmit={methods.handleSubmit(onSubmit)}\n                className=\"p-5 basis-1/2\"\n              >\n                <div className=\" mx-auto lg:py-20 md:mt-8 max-w-[420px]\">\n                  <div className=\"text-center text-3xl capitalize\">\n                    forgot password\n                  </div>\n                  {/* errors from api  */}\n                  {APIerror.length > 0 && (\n                    <div className=\"text-xl text-secondary flex space-x-4 bg-warning items-center rounded py-2 px-2 my-2\">\n                      <AiOutlineWarning className=\"text-5xl\" />{\" \"}\n                      <span className=\"capitalize\">{APIerror}</span>\n                    </div>\n                  )}\n                  <div className=\"mt-5\">\n                    Enter Your Ragistered Email Address\n                  </div>\n                  <TextField\n                    label=\"Email\"\n                    fieldname=\"email\"\n                    required={true}\n                  ></TextField>\n                  <div className=\"mt-6 mb-3\">\n                    <button\n                      type=\"submit\"\n                      className={`px-10  font-semibold border border-light1 text-lg  rounded-xl text-center subpixel-antialiased  capitalize\n              ${methods.formState.isValid ? \"text-primary\" : \"text-light1\"}`}\n                    >\n                      submit\n                    </button>\n                  </div>\n                  <div className=\"text-sm\">\n                    <Link to={\"/login\"} className=\"flex items-center space-x-2\">\n                      <HiOutlineArrowNarrowLeft />\n                      <span className=\"capitalize\"> back to login </span>\n                    </Link>\n                  </div>\n                </div>\n              </form>\n            </FormProvider>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useFormContext, useController } from \"react-hook-form\";\n\nexport default function TextField({\n  fieldname,\n  required,\n  type,\n  label,\n  ...rest\n}: any) {\n  const methods = useFormContext();\n  const registration = methods.register(fieldname);\n  const { fieldState } = useController({ name: fieldname });\n  let error = fieldState?.error;\n  return (\n    <div>\n      <div className=\"flex mt-5 w-full space-x-2\">\n        <div className=\"form-floating  w-full\">\n          <input\n            type={type ? type : \"text\"}\n            {...registration}\n            {...rest}\n            className=\"form-control  block rounded px-2.5 pb-2.5 pt-5 w-full text-sm border\n            transition ease-in-out m-0  focus:outline-none focus:ring-0\"\n            placeholder={label}\n            onKeyDown={(e) => {\n              if (type === \"number\" && e.code === \"KeyE\") {\n                e.preventDefault();\n              }\n              if (\n                fieldname === \"identifier\" &&\n                methods.getValues(fieldname).length >= 14 &&\n                (parseInt(e.key) <= 9 ||\n                  parseInt(e.key) >= 0 ||\n                  e.key === \"-\" ||\n                  e.key === \"+\")\n              ) {\n                e.preventDefault();\n              }\n              if (\n                fieldname === \"postcode\" &&\n                methods.getValues(fieldname).length >= 6 &&\n                (parseInt(e.key) <= 9 ||\n                  parseInt(e.key) >= 0 ||\n                  e.key === \"-\" ||\n                  e.key === \"+\")\n              ) {\n                e.preventDefault();\n              }\n            }}\n          />\n          <label className=\"text-primary\">{label}</label>\n        </div>\n        <div\n          className={`w-2 ${\n            error?.type !== \"required\" ? \"text-primary\" : \"text-danger\"\n          }`}\n        >\n          {required && <span>*</span>}\n        </div>\n      </div>\n      <div className=\"text-sm text-danger capitalize\">{error?.message}</div>\n    </div>\n  );\n}\n"],"names":["API_URL","process","Signup","data","axios","res","response","Login","ForgotPassword","CheckForResetPassword","ResetPassword","VerifyAccount","token","headers","authorization","Accept","ActivateAccount","RegenerateLink","ForgotPasswordSchema","Yup","shape","email","required","matches","useState","APIerror","setAPIerror","APIsuccess","setAPIsuccess","methods","useForm","mode","resolver","yupResolver","onSubmit","ForgotPasswordService","success","message","className","src","forgotpassword","alt","length","handleSubmit","TextField","label","fieldname","type","formState","isValid","to","rest","useFormContext","registration","register","fieldState","useController","name","error","placeholder","onKeyDown","e","code","preventDefault","getValues","parseInt","key"],"sourceRoot":""}