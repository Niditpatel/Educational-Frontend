{"version":3,"file":"static/js/901.6cc72168.chunk.js","mappings":"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","sources":["models/CreateClassModel.tsx","components/Admin/Class/CreateClass.tsx","components/Admin/Class/UpdateClass.tsx","components/Admin/Class/Class.tsx"],"sourcesContent":["import * as Yup from \"yup\";\n\nexport const CreateClassModel = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Name is Required\")\n    .min(3, \"minimum 3 charcter is required\")\n    .max(8, \"maximum 8 charcter is allowed\"),\n  yearGroup: Yup.string().default(null),\n  noOfStudents: Yup.string().default(null).nullable(),\n  assignee: Yup.array().of(Yup.object()),\n  institute: Yup.object().required(\"Institute is required\").nullable(),\n  keyStage: Yup.array().of(Yup.object()),\n  examBoard: Yup.array().of(Yup.object()),\n});\n","import { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from \"../../common/Fields/TextField\";\nimport {\n  AsyncMultiSingleSelect,\n  AsyncSingleSelect,\n  SingleSelect,\n} from \"../../common/Fields/SelectField\";\n\nimport { CreateClassModel } from \"../../../models/CreateClassModel\";\nimport { useState } from \"react\";\n\nimport { Create as CreateClassService } from \"../../../CurdService\";\nimport { GetInstitutes as GetInstitutesService } from \"../../../GetDataService\";\nimport { useOutletContext } from \"react-router-dom\";\n\nexport const CreateClass = (props: any) => {\n  const { stages, boards } = props;\n  const [APIerror, setAPIerror] = useState(\"\");\n  const [CahcheInstitute, setCahcheInstitute] = useState<any>([]);\n  const [APIsuccess, setAPIsuccess] = useState(\"\");\n\n  const { handleLoading } = useOutletContext<any>();\n\n  const methods = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(CreateClassModel),\n  });\n\n  const selectInstitute = async (inputValue: string) => {\n    if (inputValue.length > 2) {\n      const res = await GetInstitutesService(inputValue);\n      const institutes = res.map((val: any) => {\n        return { label: val.name.toUpperCase(), value: val._id };\n      });\n      setCahcheInstitute([...institutes]);\n      return institutes;\n    }\n  };\n\n  const SelectAssigne = async (inputValue: string) => {\n    // if (inputValue.length > 2) {\n    //   const res = await (inputValue);\n    //   const institutes = res.map((val: any) => {\n    //     return { label: val.name.toUpperCase(), value: val._id };\n    //   });\n    //   setCahcheInstitute([...institutes]);\n    //   return institutes;\n    // }\n  };\n\n  const onSubmit = (data: any) => {\n    setAPIsuccess(\"\");\n    setAPIerror(\"\");\n    handleLoading(true);\n    const token = sessionStorage.getItem(\"Access\");\n\n    const { keyStage, institute, assignee, ...restData } = data;\n\n    CreateClassService(\n      \"class/\",\n      {\n        keyStage: keyStage.value,\n        institute: institute.value,\n        assignee: assignee.value,\n        ...restData,\n      },\n      {}\n    ).then((res: any) => {\n      if (res.success === 0) {\n        handleLoading(false);\n        setAPIerror(res.message);\n      } else {\n        setAPIsuccess(res.message);\n        methods.reset();\n        handleLoading(false);\n      }\n    });\n  };\n  return (\n    <>\n      <div>\n        <div className=\"flex justify-center\">\n          {APIerror.length > 0 && (\n            <div className=\"bg-warning rounded p-2\">{APIerror}</div>\n          )}\n          {APIsuccess.length > 0 && (\n            <div className=\"bg-success p-2 rounded\">{APIsuccess}</div>\n          )}\n        </div>\n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(onSubmit)}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n              <TextField fieldname=\"name\" label=\"Name\" required={true} />\n              <div className=\"w-full mt-5\">\n                <SingleSelect\n                  fieldname=\"keyStage\"\n                  placeholder=\"Key Stage\"\n                  isSearchable={false}\n                  options={stages}\n                />\n              </div>\n              <TextField fieldname=\"yearGroup\" label=\"Year Group\" />\n              <TextField\n                type=\"number\"\n                fieldname=\"noOfStudents\"\n                label=\"Number of Students\"\n              />\n              <AsyncSingleSelect\n                fieldname=\"institute\"\n                placeholder=\"Institute\"\n                loadOptions={selectInstitute}\n                instituteDefaultOptions={CahcheInstitute}\n                required={true}\n              />\n              <div className=\"w-full mt-5\">\n                <SingleSelect\n                  fieldname=\"examBoard\"\n                  isSearchable={false}\n                  placeholder=\"Exam Board\"\n                  options={boards}\n                />\n              </div>\n              <div className=\"w-full mt-5\">\n                <AsyncMultiSingleSelect\n                  fieldname=\"assignee\"\n                  placeholder=\"Assignee\"\n                  loadOptions={SelectAssigne}\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-center mt-5\">\n              <button\n                type=\"submit\"\n                className=\"border border-primary px-5 text-center bg-primary text-white  py-1  capitalize hover:bg-white hover:text-primary\"\n              >\n                Create Class\n              </button>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\n","import { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from \"../../common/Fields/TextField\";\nimport {\n  AsyncMultiSingleSelect,\n  AsyncSingleSelect,\n  SingleSelect,\n} from \"../../common/Fields/SelectField\";\n\nexport const UpdateClass = (props: any) => {\n  const { classId, stages, boards } = props;\n  const methods = useForm({\n    mode: \"onChange\",\n    // resolver: yupResolver(CreateInstituteSchema),\n  });\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n  return (\n    <>\n      <div>\n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(onSubmit)}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n              <TextField fieldname=\"name\" label=\"Name\" required={true} />\n              <div className=\"w-full mt-5\">\n                <SingleSelect\n                  fieldname=\"keyStage\"\n                  placeholder=\"Key Stage\"\n                  isSearchable={false}\n                  options={stages}\n                />\n              </div>\n              <TextField fieldname=\"yearGroup\" label=\"Year Group\" />\n              <TextField\n                type=\"number\"\n                fieldname=\"noOfStudents\"\n                label=\"Number of Students\"\n              />\n              <AsyncSingleSelect\n                fieldname=\"institute\"\n                placeholder=\"Institute\"\n                required={true}\n              />\n              <div className=\"w-full mt-5\">\n                <SingleSelect\n                  fieldname=\"examBoard\"\n                  placeholder=\"Exam Board\"\n                  isSearchable={false}\n                  options={boards}\n                />\n              </div>\n              <div className=\"w-full mt-5\">\n                <AsyncMultiSingleSelect fieldname=\"asiignee\" />\n              </div>\n            </div>\n            <div className=\"flex justify-center mt-5\">\n              <button\n                type=\"submit\"\n                className=\"border border-primary px-5 text-center bg-primary text-white  py-1  capitalize hover:bg-white hover:text-primary\"\n              >\n                Update Class\n              </button>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\n","import { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { CreateClass } from \"./CreateClass\";\nimport { UpdateClass } from \"./UpdateClass\";\nimport {\n  AsyncMultiSingleSelect,\n  SingleSelect,\n} from \"../../common/Fields/SelectField\";\nimport { useEffect, useState } from \"react\";\n\nimport { GetInstitutes as GetInstitutesService } from \"../../../GetDataService\";\nimport {\n  Get as GetDataService,\n  Delete as DeleteDataService,\n} from \"../../../CurdService\";\n\nimport Table from \"../../common/Table/Table\";\nimport ReturnToTop from \"../../common/ReturnToTop/ReturnToTop\";\nimport ShowDataQuery from \"../../common/Table/ShowdataQuery/ShowDataQuery\";\nimport Modal from \"../../common/Modal/Modal\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Pagination from \"../../common/Pagination/Pagination\";\nimport DisplayRows from \"../../common/Table/DisplayRows/DisplayRows\";\n\nexport default function Class() {\n  const [CahcheInstitute, setCahcheInstitute] = useState<any>([]);\n  const [Classes, setClasses] = useState([]);\n\n  const [boards, setboards] = useState([]);\n  const [stages, setstages] = useState([]);\n\n  const [Count, setCount] = useState<any>();\n  const [TotalData, setTotalData] = useState<any>();\n\n  const [DeleteClass, setDeleteClass] = useState<any>({});\n  const [DeleteClassRespone, setDeleteClassRespone] = useState(\"\");\n\n  const [ActionClassid, setActionClassid] = useState(\"\");\n  const [action, setaction] = useState(\"search\");\n\n  const [limitAndOffset, setlimitAndOffset] = useState({\n    limit: 5,\n    offset: 1,\n  });\n\n  const [sortData, setsortData] = useState({ order: 1, sort_by: \"\" });\n\n  const { handleLoading } = useOutletContext<any>();\n\n  const methods = useForm({\n    mode: \"onChange\",\n    //  resolver: yupResolver(SearchInstituteModelSchema),\n  });\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n\n  // for search institutes\n  const selectInstitute = async (inputValue: string) => {\n    if (inputValue.length > 2) {\n      const res = await GetInstitutesService(inputValue);\n      const institutes = res.map((val: any) => {\n        return { label: val.name.toUpperCase(), value: val._id };\n      });\n      setCahcheInstitute([...institutes]);\n      return institutes;\n    }\n  };\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"Access\");\n    GetDataService(\"class/board\", token, {}).then((res: any) => {\n      setboards(\n        res.map((item: any) => {\n          return { label: item, value: item };\n        })\n      );\n    });\n    GetDataService(\"class/stage\", token, {}).then((res: any) => {\n      setstages(\n        res.map((item: any) => {\n          return { label: item, value: item };\n        })\n      );\n    });\n  }, []);\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"Access\");\n    GetDataService(\"class/\", token, {}).then((res: any) => {\n      if (res.success === 1) {\n        console.log(res, \"res\");\n        setClasses(res.data);\n        setTotalData(res.count);\n        setCount(Math.ceil(parseInt(res.count) / 5));\n      }\n    });\n  }, []);\n\n  // for edit class\n  const handleClassEdit = (data: any) => {\n    setActionClassid(data);\n    setaction(\"edit\");\n  };\n\n  // conformation for delete\n  const handleConfirmationForClassDelete = (data: any) => {\n    setDeleteClass(data);\n    document.getElementById(\"DeleteClassModal\")?.click();\n  };\n\n  // for delete class\n  function handleDelete() {\n    handleLoading(true);\n    const token = sessionStorage.getItem(\"Access\");\n    DeleteDataService(\"user/\", token, DeleteClass._id).then((res: any) => {\n      handleLoading(false);\n      setDeleteClassRespone(res.message);\n    });\n  }\n\n  // handle return to top\n  const handleReturnToTop = () => {\n    setaction(\"search\");\n    sessionStorage.setItem(\"Classaction\", \"search\");\n  };\n\n  // handle Display Rows\n  const handleDisplayRows = (data: any) => {\n    sessionStorage.setItem(\"Classlimit\", data);\n    methods.setValue(\"limit\", parseInt(data));\n    methods.setValue(\"offset\", 1);\n    sessionStorage.setItem(\"Classoffset\", \"1\");\n    setlimitAndOffset({\n      offset: 1,\n      limit: parseInt(data),\n    });\n  };\n\n  // on page up\n  const handlePageUp = (data: any) => {\n    const offset = limitAndOffset.offset;\n    if (offset < parseInt(Count)) {\n      methods.setValue(\"offset\", offset + 1);\n      sessionStorage.setItem(\"Classoffset\", (offset + 1).toString());\n      setlimitAndOffset({\n        ...limitAndOffset,\n        offset: offset + 1,\n      });\n    }\n  };\n\n  // on page down\n  const handlePageDown = (data: any) => {\n    const offset = methods.getValues(\"offset\");\n    if (offset > 1) {\n      methods.setValue(\"offset\", offset - 1);\n      sessionStorage.setItem(\"Classoffset\", (offset - 1).toString());\n      setlimitAndOffset({\n        ...limitAndOffset,\n        offset: offset - 1,\n      });\n    }\n  };\n\n  // on page jump\n  const handlePageJump = (data: any) => {\n    const page = parseInt(data);\n    if (data.length > 0 && page >= 1 && page !== limitAndOffset.offset) {\n      methods.setValue(\"offset\", page);\n      setlimitAndOffset({\n        ...limitAndOffset,\n        offset: page,\n      });\n      sessionStorage.setItem(\"Classoffset\", data);\n    }\n  };\n\n  // handle data sorting\n  const handleSorting = (data: any) => {\n    setsortData({\n      sort_by: data.sort_by,\n      order: data.order,\n    });\n  };\n\n  return (\n    <div className=\"container px-2 text-primary\">\n      <div className=\"capitalize text-lg\">Classes</div>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit(onSubmit)}>\n          <div className=\" mt-5 grid grid-cols-1 gap-5 md:grid-cols-2 xl:grid-cols-3\">\n            <div className=\"w-full pr-4\">\n              <label\n                className=\"capitalize\"\n                id=\"InstituteSearchLabel\"\n                data-tooltip-content=\"Search The Name, Territory, Level And Type Here.... \"\n              >\n                search\n              </label>\n              <input\n                type=\"text\"\n                className=\"border rounded primary-placeholder w-full p-4  focus:outline-none\"\n                placeholder=\"Search...\"\n                {...methods.register(\"query\")}\n              />\n            </div>\n            <div>\n              <label className=\"capitalize\">Institution</label>\n              <AsyncMultiSingleSelect\n                fieldname=\"institution\"\n                placeholder=\"Select Institution\"\n                loadOptions={selectInstitute}\n                defaultOptions={CahcheInstitute}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"\">Exam Board</label>\n              <SingleSelect\n                fieldname=\"examBoard\"\n                placeholder=\"Select Exam Boards\"\n                options={boards}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"\">Key Stages</label>\n              <SingleSelect\n                fieldname=\"keyStage\"\n                placeholder=\"Select Key Stages\"\n                options={stages}\n              />\n            </div>\n          </div>\n          <div className=\"flex flex-col space-y-4 md:flex-row md:justify-between  mt-5 md:mt-3\">\n            <div className=\"flex space-x-8\">\n              <button\n                type=\"submit\"\n                className=\"border border-primary w-32 text-center bg-primary text-white  py-1  capitalize hover:bg-white hover:text-primary \"\n              >\n                search\n              </button>\n              <button\n                id=\"ClassSearchReset\"\n                className=\"border border-primary w-32 text-center bg-primary text-white py-1  capitalize hover:bg-white hover:text-primary\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  methods.reset();\n                }}\n              >\n                reset\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"underline capitalize\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setaction(\"new\");\n                  sessionStorage.setItem(\"Classaction\", \"new\");\n                }}\n              >\n                &#43; create class\n              </button>\n            </div>\n          </div>\n          <div>\n            <div className=\"conatiner py-1  mt-5\">\n              {Classes && (\n                <>\n                  {Classes.length > 0 && (\n                    <Table\n                      data={Classes}\n                      isFor={\"Class\"}\n                      handleEdit={handleClassEdit}\n                      handleDelete={handleConfirmationForClassDelete}\n                      handleSort={handleSorting}\n                    >\n                      <ShowDataQuery TotalData={TotalData} />\n                    </Table>\n                  )}\n                </>\n              )}\n              {Classes.length === 0 && (\n                <>\n                  <div className=\"capitalize w-full  text-center text-3xl mt-10\">\n                    There is No Data To show\n                  </div>\n                </>\n              )}\n            </div>\n            {Classes.length !== 0 && (\n              <div className=\"flex my-5 justify-between\">\n                <Pagination\n                  handlePageUp={handlePageUp}\n                  handlePageDown={handlePageDown}\n                  handlePageJump={handlePageJump}\n                  lastPage={Count}\n                />\n                {/* display rows */}\n                <DisplayRows\n                  handleChange={handleDisplayRows}\n                  TotalData={TotalData}\n                />\n              </div>\n            )}\n          </div>\n        </form>\n      </FormProvider>\n      {/* for conformation  */}\n      <Modal\n        id=\"DeleteClassModal\"\n        handleConform={handleDelete}\n        modalText={`Are you sure , You want to delete  ${DeleteClass.name} ?`}\n        isFor={\"warning\"}\n      />\n      {action !== \"search\" && <ReturnToTop handleReturn={handleReturnToTop} />}\n      {action === \"new\" && <CreateClass stages={stages} boards={boards} />}\n      {action === \"edit\" && (\n        <UpdateClass classId={ActionClassid} stages={stages} boards={boards} />\n      )}\n    </div>\n  );\n}\n"],"names":["CreateClassModel","Yup","shape","name","required","min","max","yearGroup","default","noOfStudents","nullable","assignee","of","institute","keyStage","examBoard","CreateClass","props","stages","boards","useState","APIerror","setAPIerror","CahcheInstitute","setCahcheInstitute","APIsuccess","setAPIsuccess","handleLoading","useOutletContext","methods","useForm","mode","resolver","yupResolver","selectInstitute","inputValue","length","GetInstitutesService","res","institutes","map","val","label","toUpperCase","value","_id","SelectAssigne","className","onSubmit","handleSubmit","data","sessionStorage","getItem","restData","CreateClassService","then","success","message","reset","TextField","fieldname","placeholder","isSearchable","options","type","loadOptions","instituteDefaultOptions","UpdateClass","classId","console","log","Class","Classes","setClasses","setboards","setstages","Count","setCount","TotalData","setTotalData","DeleteClass","setDeleteClass","setDeleteClassRespone","ActionClassid","setActionClassid","action","setaction","limit","offset","limitAndOffset","setlimitAndOffset","order","sort_by","setsortData","useEffect","token","GetDataService","item","count","Math","ceil","parseInt","id","register","defaultOptions","htmlFor","onClick","e","preventDefault","setItem","Table","isFor","handleEdit","handleDelete","document","getElementById","click","handleSort","ShowDataQuery","Pagination","handlePageUp","setValue","toString","handlePageDown","getValues","handlePageJump","page","lastPage","DisplayRows","handleChange","Modal","handleConform","DeleteDataService","modalText","ReturnToTop","handleReturn"],"sourceRoot":""}